import moviesData from "./moviesData.js";export interface Movie {    title: string,    year: number,    categories: string[],    id: string,    rating: number,    time: string,    lang: string,    video_url: string,    summary: string,    smallImg: string,    largeImg: string}const movies: Movie[] = moviesData.map(el => {    return {        title: el?.title ?? '',        year: el?.year ?? null,        categories: el?.categories ?? [],        id: el?.imdbId ?? null,        rating: el?.imdbRating ?? 0,        time: `${Math.trunc(el.runtime / 60)} soat ${el.runtime % 60} daqiqa`,        lang: el?.language ?? '',        video_url: `https://www.youtube.com/embed/${el.youtubeId}`,        summary: el?.summary ?? '',        smallImg: el?.smallThumbnail ?? '',        largeImg: el?.bigThumbnail ?? '',    }});export interface MoviesParams {    page: number,    name?: string,    rate?: number | null,    category?: string}interface getMoviesType {    per_page: number,    page: number,    last_page: number,    data: Movie[] | []}const defaultMoviesParams:MoviesParams = {    page: 1}const per_page: number = 12;const total_page: number = movies.length;const last_page: number = total_page ? Math.ceil(total_page / per_page) : 0;const getMovies = (params: MoviesParams = defaultMoviesParams): getMoviesType  => {    if(!Object.keys(params).length) return {        data: [],        page: 0,        per_page: 0,        last_page: 0,    }    let newMovies: Movie[] = [];    if(params.name || params.category || params.rate){        movies.forEach(el => {            let hasName: Boolean = false;            let hasRate: Boolean = false;            let hasCategory: Boolean = false;            const title: string = el.title.toLowerCase();            const rate:number = Math.floor(el.rating);            if(params.name) hasName = title.search(params.name.toLowerCase()) !== -1;            if(params.rate) hasRate = rate === Math.floor(params.rate);            if(params.category) hasCategory = !!el.categories.find(category => category === params.category);            if(hasName || hasRate || hasCategory) newMovies.push(el);        });    }else newMovies = movies;    const startIndex: number = (params.page - 1) * per_page;    const endIndex: number = startIndex + per_page;    const data: Movie[] = newMovies.slice(startIndex, endIndex);    return {        data: data,        page: params.page,        per_page: per_page,        last_page: last_page    };}const getVideo = (id: string): Movie | {} => movies.find(el => el.id === id) ?? {};export {    getMovies,    getVideo,}