import {getMovies, Movie, MoviesParams} from "./movies/index.js";import {$, $$, createElement} from "./utils/pulign.js";import {setPagination} from "./components/ui/app-pagination.js";const filterForm: MoviesParams = {    name: "",    rate: null,    category: "",    page: 1,}const moviesLoader = <HTMLDivElement> $("#moviesLoader");const homeCards = <HTMLDivElement> $(".home__cards");const moviesData = <HTMLDivElement> $("#moviesData");const homeFooter = <HTMLDivElement> $("#homeFooter");const showMovie = (id:string) => {    console.log(id);}let moviesIsLoading: Boolean = true;const paginationName: string = "movies";const videoBoxClick = (): void => {    const homeCardVideoBoxes = $$('.home__card__video-box') as NodeListOf<HTMLButtonElement>;    homeCardVideoBoxes.forEach(el => {        el.addEventListener("click", event => {            const currentTarget = <HTMLButtonElement>event.currentTarget;            if (currentTarget) {                const id: string | null = currentTarget?.getAttribute('data-id');                if (id) showMovie(id);            }        });    });}let movies: Movie[] = [];let activePage: number = 1;let lastPage: number;const fetchMovies = (): void => {    const {data, page, last_page} = getMovies(filterForm);    moviesIsLoading = true;    moviesData.style.display = "none";    moviesLoader.style.display = moviesIsLoading ? "" : "none";    movies = data;    activePage = page;    lastPage = last_page;    homeCards.innerHTML = "";    homeFooter.innerHTML = "";    setTimeout(() => {        moviesData.style.display = "";        moviesIsLoading = false;        moviesLoader.style.display = moviesIsLoading ? "" : "none";    }, 500);}const renderMovies = (): void => {    fetchMovies();    movies.forEach(el => {        let homeCard = <HTMLDivElement> createElement('div', 'app-card home__card', `               <div class="app-card__header">                <button                    data-id="${el.id}"                    class="home__card__video-box video-box app-card__img-wrapper"                >                  <img                      class="video-box__img app-card__img"                      src="${el.smallImg}"                      alt="Movie img"                  >                </button>              </div>              <div class="app-card__body">                <h3 class="app-card__title">                  ${el.title}               </h3>                <ul class="home__card__list">                  <li class="home__card__list__item">                    <span class="home__card__list__item-title">                        Year:                    </span>                    <span class="home__card__list__item-text">                        ${el.year}                    </span>                  </li>                  <li class="home__card__list__item">                    <span class="home__card__list__item-title">                        Category:                    </span>                    <span class="home__card__list__item-text">                      ${el?.categories.join(', ') ?? ''}                     </span>                  </li>                  <li class="home__card__list__item">                    <span class="home__card__list__item-title">                        Rating:                    </span>                    <span class="home__card__list__item-text">                      ${el?.rating ?? ''}                     </span>                  </li>                </ul>              </div>        `);        homeCard.dataset.moieId=el.id;        homeCards.appendChild(homeCard);    });    const pagination = <HTMLDivElement>setPagination(paginationName, activePage, lastPage);     homeFooter.appendChild(pagination);    videoBoxClick();    paginationHandler();}const paginationHandler = ():void => {    const pagination = <HTMLDivElement>$(`#${paginationName}-pagination`);    if (pagination) {        const paginationButtons = pagination.querySelectorAll('.app-pagination__btn') as NodeListOf<HTMLButtonElement>;        paginationButtons.forEach(el => {            el.addEventListener("click", event => {                const currentTarget = <HTMLButtonElement>event.currentTarget;                if (currentTarget) {                    const dataId: string | null = currentTarget?.getAttribute('data-id');                    if (dataId) {                        if (dataId === 'prev') activePage--;                        else if (dataId === 'next') activePage++;                        else activePage = +dataId;                        filterForm.page = activePage;                        fetchMovies();                        renderMovies();                    }                }            });        });    }}renderMovies();